//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jobs4Bahrainis.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Jobs4bahrainisEntities : DbContext
    {
        public Jobs4bahrainisEntities()
            : base("name=Jobs4bahrainisEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminStatisticsByUser> AdminStatisticsByUsers { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<AttributeData> AttributeDatas { get; set; }
        public virtual DbSet<AttributeList> AttributeLists { get; set; }
        public virtual DbSet<AttributeResponses0> AttributeResponses0 { get; set; }
        public virtual DbSet<AttributeResponses1> AttributeResponses1 { get; set; }
        public virtual DbSet<AttributeResponses2> AttributeResponses2 { get; set; }
        public virtual DbSet<AttributeResponses3> AttributeResponses3 { get; set; }
        public virtual DbSet<AttributeResponses4> AttributeResponses4 { get; set; }
        public virtual DbSet<AttributeResponses5> AttributeResponses5 { get; set; }
        public virtual DbSet<AttributeResponses6> AttributeResponses6 { get; set; }
        public virtual DbSet<AttributeResponses7> AttributeResponses7 { get; set; }
        public virtual DbSet<AttributeResponses8> AttributeResponses8 { get; set; }
        public virtual DbSet<AttributeResponses9> AttributeResponses9 { get; set; }
        public virtual DbSet<Attribute> Attributes { get; set; }
        public virtual DbSet<AttributeType> AttributeTypes { get; set; }
        public virtual DbSet<AuditActionType> AuditActionTypes { get; set; }
        public virtual DbSet<BannerBrandType> BannerBrandTypes { get; set; }
        public virtual DbSet<BannerPage> BannerPages { get; set; }
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<BannerType> BannerTypes { get; set; }
        public virtual DbSet<BookingRequest> BookingRequests { get; set; }
        public virtual DbSet<BrandCollaboration> BrandCollaborations { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<CandidateCertification> CandidateCertifications { get; set; }
        public virtual DbSet<CandidateCertification_T> CandidateCertification_T { get; set; }
        public virtual DbSet<CandidateDocument> CandidateDocuments { get; set; }
        public virtual DbSet<CandidateEducation> CandidateEducations { get; set; }
        public virtual DbSet<CandidateEducation_T> CandidateEducation_T { get; set; }
        public virtual DbSet<CandidateEmployer_T> CandidateEmployer_T { get; set; }
        public virtual DbSet<CandidateExperience> CandidateExperiences { get; set; }
        public virtual DbSet<CandidateHonour> CandidateHonours { get; set; }
        public virtual DbSet<CandidateIdealCareerMove> CandidateIdealCareerMoves { get; set; }
        public virtual DbSet<CandidateIdealCareerMove_T> CandidateIdealCareerMove_T { get; set; }
        public virtual DbSet<CandidateInBox> CandidateInBoxes { get; set; }
        public virtual DbSet<CandidateInterest> CandidateInterests { get; set; }
        public virtual DbSet<CandidateInterestType> CandidateInterestTypes { get; set; }
        public virtual DbSet<CandidateLanguage> CandidateLanguages { get; set; }
        public virtual DbSet<CandidateLanguage_T> CandidateLanguage_T { get; set; }
        public virtual DbSet<CandidateOtherSkill_T> CandidateOtherSkill_T { get; set; }
        public virtual DbSet<Candidate> Candidates { get; set; }
        public virtual DbSet<CandidateSearch> CandidateSearches { get; set; }
        public virtual DbSet<CandidateSearchLocation> CandidateSearchLocations { get; set; }
        public virtual DbSet<CandidateSearchSector> CandidateSearchSectors { get; set; }
        public virtual DbSet<CandidateSearchShortlist> CandidateSearchShortlists { get; set; }
        public virtual DbSet<CandidateSkill_T> CandidateSkill_T { get; set; }
        public virtual DbSet<CandidateSkill> CandidateSkills { get; set; }
        public virtual DbSet<CandidateWorkHistory_T> CandidateWorkHistory_T { get; set; }
        public virtual DbSet<CareerServices_T> CareerServices_T { get; set; }
        public virtual DbSet<CollaborationType> CollaborationTypes { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<CompanyFollowers_T> CompanyFollowers_T { get; set; }
        public virtual DbSet<CompanyManagement_T> CompanyManagement_T { get; set; }
        public virtual DbSet<CompanyMaster_T> CompanyMaster_T { get; set; }
        public virtual DbSet<CompanyMedia_T> CompanyMedia_T { get; set; }
        public virtual DbSet<CompanyPackage> CompanyPackages { get; set; }
        public virtual DbSet<CompanyPhotoGallery_T> CompanyPhotoGallery_T { get; set; }
        public virtual DbSet<CompanySector> CompanySectors { get; set; }
        public virtual DbSet<CompanyStatistic> CompanyStatistics { get; set; }
        public virtual DbSet<CompanyTestimonials_T> CompanyTestimonials_T { get; set; }
        public virtual DbSet<CompanyVideo_T> CompanyVideo_T { get; set; }
        public virtual DbSet<Complaint> Complaints { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Content> Contents { get; set; }
        public virtual DbSet<ContentReplace> ContentReplaces { get; set; }
        public virtual DbSet<CounterAdvSrchCompany_T> CounterAdvSrchCompany_T { get; set; }
        public virtual DbSet<CounterAdvSrchKeywords_T> CounterAdvSrchKeywords_T { get; set; }
        public virtual DbSet<CounterAdvSrchQualification_T> CounterAdvSrchQualification_T { get; set; }
        public virtual DbSet<CounterAdvSrchSectors_T> CounterAdvSrchSectors_T { get; set; }
        public virtual DbSet<CSCredits_T> CSCredits_T { get; set; }
        public virtual DbSet<CSCreditType_T> CSCreditType_T { get; set; }
        public virtual DbSet<CSCreditUsage_T> CSCreditUsage_T { get; set; }
        public virtual DbSet<CSPackage_T> CSPackage_T { get; set; }
        public virtual DbSet<CSSubscription_T> CSSubscription_T { get; set; }
        public virtual DbSet<CSVouchers_T> CSVouchers_T { get; set; }
        public virtual DbSet<DataCache> DataCaches { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<dtproperty> dtproperties { get; set; }
        public virtual DbSet<EmailContent> EmailContents { get; set; }
        public virtual DbSet<EmailContentReplace> EmailContentReplaces { get; set; }
        public virtual DbSet<EmailLog> EmailLogs { get; set; }
        public virtual DbSet<EmployerComingSoon_T> EmployerComingSoon_T { get; set; }
        public virtual DbSet<EmployerPackages_T> EmployerPackages_T { get; set; }
        public virtual DbSet<EmployerPackageTransactions_T> EmployerPackageTransactions_T { get; set; }
        public virtual DbSet<Entity> Entities { get; set; }
        public virtual DbSet<EY_Candidates_T> EY_Candidates_T { get; set; }
        public virtual DbSet<EY_CVDownloads_T> EY_CVDownloads_T { get; set; }
        public virtual DbSet<EY_Employer_T> EY_Employer_T { get; set; }
        public virtual DbSet<ImageResource> ImageResources { get; set; }
        public virtual DbSet<ImageResourceType> ImageResourceTypes { get; set; }
        public virtual DbSet<JobFair_T> JobFair_T { get; set; }
        public virtual DbSet<JobRoleEquivalenceGroup> JobRoleEquivalenceGroups { get; set; }
        public virtual DbSet<JobRoleEquivalence> JobRoleEquivalences { get; set; }
        public virtual DbSet<JobRoleProfile> JobRoleProfiles { get; set; }
        public virtual DbSet<JobSearch> JobSearches { get; set; }
        public virtual DbSet<JobSearchJobType> JobSearchJobTypes { get; set; }
        public virtual DbSet<JobSearchLocation> JobSearchLocations { get; set; }
        public virtual DbSet<JobSearchRecruiterType> JobSearchRecruiterTypes { get; set; }
        public virtual DbSet<JobSearchSector> JobSearchSectors { get; set; }
        public virtual DbSet<Link> Links { get; set; }
        public virtual DbSet<LinkType> LinkTypes { get; set; }
        public virtual DbSet<ListBrandAssociation> ListBrandAssociations { get; set; }
        public virtual DbSet<ListsBrand> ListsBrands { get; set; }
        public virtual DbSet<ListsBrandGrouping> ListsBrandGroupings { get; set; }
        public virtual DbSet<ListsMaster> ListsMasters { get; set; }
        public virtual DbSet<ListsMasterGrouping> ListsMasterGroupings { get; set; }
        public virtual DbSet<ListType> ListTypes { get; set; }
        public virtual DbSet<ManagementReportGroup> ManagementReportGroups { get; set; }
        public virtual DbSet<ManagementReport> ManagementReports { get; set; }
        public virtual DbSet<Mapping> Mappings { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<MenuItem> MenuItems { get; set; }
        public virtual DbSet<Microsite> Microsites { get; set; }
        public virtual DbSet<MicrositeContent> MicrositeContents { get; set; }
        public virtual DbSet<MicrositeMenuItem> MicrositeMenuItems { get; set; }
        public virtual DbSet<MicrositeTemplate> MicrositeTemplates { get; set; }
        public virtual DbSet<MicrositeTemplateAttribute> MicrositeTemplateAttributes { get; set; }
        public virtual DbSet<MicrositeVacancy> MicrositeVacancies { get; set; }
        public virtual DbSet<NewsArticleBrand> NewsArticleBrands { get; set; }
        public virtual DbSet<NewsArticle> NewsArticles { get; set; }
        public virtual DbSet<NewsletterSubscribers_T> NewsletterSubscribers_T { get; set; }
        public virtual DbSet<NoiseWord> NoiseWords { get; set; }
        public virtual DbSet<Note_T> Note_T { get; set; }
        public virtual DbSet<Order_T> Order_T { get; set; }
        public virtual DbSet<OrderLine> OrderLines { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<PackagePrice> PackagePrices { get; set; }
        public virtual DbSet<PackageType> PackageTypes { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<PopUpCompany_T> PopUpCompany_T { get; set; }
        public virtual DbSet<ppaCharge> ppaCharges { get; set; }
        public virtual DbSet<RecommendationJobRole> RecommendationJobRoles { get; set; }
        public virtual DbSet<Recommendation> Recommendations { get; set; }
        public virtual DbSet<RecruiterStatisticsByCompany> RecruiterStatisticsByCompanies { get; set; }
        public virtual DbSet<Report_T> Report_T { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<ReportsStandard> ReportsStandards { get; set; }
        public virtual DbSet<ReportType_T> ReportType_T { get; set; }
        public virtual DbSet<Resource> Resources { get; set; }
        public virtual DbSet<ResourceBrand> ResourceBrands { get; set; }
        public virtual DbSet<ResourceType> ResourceTypes { get; set; }
        public virtual DbSet<SalaryRanx> SalaryRanges { get; set; }
        public virtual DbSet<SavedJob_T> SavedJob_T { get; set; }
        public virtual DbSet<SearchScope> SearchScopes { get; set; }
        public virtual DbSet<SearchScopeType> SearchScopeTypes { get; set; }
        public virtual DbSet<Settings_T> Settings_T { get; set; }
        public virtual DbSet<Statistic> Statistics { get; set; }
        public virtual DbSet<StatisticType> StatisticTypes { get; set; }
        public virtual DbSet<status_T> status_T { get; set; }
        public virtual DbSet<Status> Statuses { get; set; }
        public virtual DbSet<SynonymGroup> SynonymGroups { get; set; }
        public virtual DbSet<Synonym> Synonyms { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TaJ4bFeedMap> TaJ4bFeedMap { get; set; }
        public virtual DbSet<tblJ4B_Cards_Types> tblJ4B_Cards_Types { get; set; }
        public virtual DbSet<tblJ4B_Payments> tblJ4B_Payments { get; set; }
        public virtual DbSet<tblJ4B_Payments_Methods> tblJ4B_Payments_Methods { get; set; }
        public virtual DbSet<UserBrand> UserBrands { get; set; }
        public virtual DbSet<UserRight> UserRights { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<Vacancy> Vacancies { get; set; }
        public virtual DbSet<VacancyBrand> VacancyBrands { get; set; }
        public virtual DbSet<VacancyLocation> VacancyLocations { get; set; }
        public virtual DbSet<VacancySector> VacancySectors { get; set; }
        public virtual DbSet<VacancyShortlistLog> VacancyShortlistLogs { get; set; }
        public virtual DbSet<candidates18oct2018> candidates18oct2018 { get; set; }
        public virtual DbSet<candidates2> candidates2 { get; set; }
        public virtual DbSet<CandidateWorkHistory_Tbkp11nov2018> CandidateWorkHistory_Tbkp11nov2018 { get; set; }
        public virtual DbSet<companies05022019> companies05022019 { get; set; }
        public virtual DbSet<companiesbkp> companiesbkps { get; set; }
        public virtual DbSet<companiesBKP14052019> companiesBKP14052019 { get; set; }
        public virtual DbSet<companiesBkp210519> companiesBkp210519 { get; set; }
        public virtual DbSet<contacts05022019> contacts05022019 { get; set; }
        public virtual DbSet<contactsBKP14052019> contactsBKP14052019 { get; set; }
        public virtual DbSet<contactsBkp210519> contactsBkp210519 { get; set; }
        public virtual DbSet<EmployerActivationCode_T> EmployerActivationCode_T { get; set; }
        public virtual DbSet<EmployerActivationCode_Told> EmployerActivationCode_Told { get; set; }
        public virtual DbSet<vacancies070119> vacancies070119 { get; set; }
        public virtual DbSet<vacancies2> vacancies2 { get; set; }
        public virtual DbSet<vacanciesbackup11oct2018> vacanciesbackup11oct2018 { get; set; }
        public virtual DbSet<VacanciesBkp> VacanciesBkps { get; set; }
        public virtual DbSet<CompaniesWithVacanciesArabic> CompaniesWithVacanciesArabics { get; set; }
        public virtual DbSet<CompaniesWithVacanciesEnglish> CompaniesWithVacanciesEnglishes { get; set; }
        public virtual DbSet<FeaturedCompany> FeaturedCompanies { get; set; }
        public virtual DbSet<Report_V> Report_V { get; set; }
    
        [DbFunction("Jobs4bahrainisEntities", "CsvToInt")]
        public virtual IQueryable<CsvToInt_Result> CsvToInt(string array)
        {
            var arrayParameter = array != null ?
                new ObjectParameter("Array", array) :
                new ObjectParameter("Array", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CsvToInt_Result>("[Jobs4bahrainisEntities].[CsvToInt](@Array)", arrayParameter);
        }
    
        public virtual int AdminStatsGetByEntityUserID(Nullable<int> userID, Nullable<int> entityId, Nullable<System.DateTime> periodEnding, Nullable<int> hours)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            var periodEndingParameter = periodEnding.HasValue ?
                new ObjectParameter("PeriodEnding", periodEnding) :
                new ObjectParameter("PeriodEnding", typeof(System.DateTime));
    
            var hoursParameter = hours.HasValue ?
                new ObjectParameter("Hours", hours) :
                new ObjectParameter("Hours", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdminStatsGetByEntityUserID", userIDParameter, entityIdParameter, periodEndingParameter, hoursParameter);
        }
    
        public virtual ObjectResult<ApplicationAdminList_Result> ApplicationAdminList(Nullable<int> currentUserId, Nullable<int> userType, Nullable<int> companyId, Nullable<int> contactId, Nullable<int> vacancyId, Nullable<int> candidateId, string candidateName, string companyName, string jobTitle, Nullable<int> status)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            var vacancyIdParameter = vacancyId.HasValue ?
                new ObjectParameter("VacancyId", vacancyId) :
                new ObjectParameter("VacancyId", typeof(int));
    
            var candidateIdParameter = candidateId.HasValue ?
                new ObjectParameter("CandidateId", candidateId) :
                new ObjectParameter("CandidateId", typeof(int));
    
            var candidateNameParameter = candidateName != null ?
                new ObjectParameter("CandidateName", candidateName) :
                new ObjectParameter("CandidateName", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApplicationAdminList_Result>("ApplicationAdminList", currentUserIdParameter, userTypeParameter, companyIdParameter, contactIdParameter, vacancyIdParameter, candidateIdParameter, candidateNameParameter, companyNameParameter, jobTitleParameter, statusParameter);
        }
    
        public virtual int AttributeInsert(Nullable<int> recordId, Nullable<int> entityId, Nullable<int> attributeId, Nullable<int> attributeDataId, string textValue)
        {
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("RecordId", recordId) :
                new ObjectParameter("RecordId", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            var attributeIdParameter = attributeId.HasValue ?
                new ObjectParameter("AttributeId", attributeId) :
                new ObjectParameter("AttributeId", typeof(int));
    
            var attributeDataIdParameter = attributeDataId.HasValue ?
                new ObjectParameter("AttributeDataId", attributeDataId) :
                new ObjectParameter("AttributeDataId", typeof(int));
    
            var textValueParameter = textValue != null ?
                new ObjectParameter("TextValue", textValue) :
                new ObjectParameter("TextValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AttributeInsert", recordIdParameter, entityIdParameter, attributeIdParameter, attributeDataIdParameter, textValueParameter);
        }
    
        public virtual int AttributesDelete(Nullable<int> recordId, Nullable<int> entityId, Nullable<int> attributeId)
        {
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("RecordId", recordId) :
                new ObjectParameter("RecordId", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            var attributeIdParameter = attributeId.HasValue ?
                new ObjectParameter("AttributeId", attributeId) :
                new ObjectParameter("AttributeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AttributesDelete", recordIdParameter, entityIdParameter, attributeIdParameter);
        }
    
        public virtual ObjectResult<AttributesGetByRecordId_Result> AttributesGetByRecordId(Nullable<int> recordId, Nullable<int> entityId)
        {
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("RecordId", recordId) :
                new ObjectParameter("RecordId", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AttributesGetByRecordId_Result>("AttributesGetByRecordId", recordIdParameter, entityIdParameter);
        }
    
        public virtual int AttributeUpdate(Nullable<int> recordId, Nullable<int> entityId, Nullable<int> attributeId, Nullable<int> attributeDataId, string textValue)
        {
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("RecordId", recordId) :
                new ObjectParameter("RecordId", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            var attributeIdParameter = attributeId.HasValue ?
                new ObjectParameter("AttributeId", attributeId) :
                new ObjectParameter("AttributeId", typeof(int));
    
            var attributeDataIdParameter = attributeDataId.HasValue ?
                new ObjectParameter("AttributeDataId", attributeDataId) :
                new ObjectParameter("AttributeDataId", typeof(int));
    
            var textValueParameter = textValue != null ?
                new ObjectParameter("TextValue", textValue) :
                new ObjectParameter("TextValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AttributeUpdate", recordIdParameter, entityIdParameter, attributeIdParameter, attributeDataIdParameter, textValueParameter);
        }
    
        public virtual ObjectResult<BrandsAdminListGet_Result> BrandsAdminListGet(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrandsAdminListGet_Result>("BrandsAdminListGet", userIdParameter);
        }
    
        public virtual ObjectResult<BrandsAuthorisedListGet_Result> BrandsAuthorisedListGet(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrandsAuthorisedListGet_Result>("BrandsAuthorisedListGet", userIdParameter);
        }
    
        public virtual int CandidateEmployerSet(Nullable<int> entityId, Nullable<int> recordId, Nullable<int> ordinal, string employersName, string jobTitle, Nullable<int> jobRoleId, string employedFrom, string employedTo, Nullable<double> currentSalary, string reasonForLeaving, Nullable<byte> employerKnowLeaving)
        {
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("RecordId", recordId) :
                new ObjectParameter("RecordId", typeof(int));
    
            var ordinalParameter = ordinal.HasValue ?
                new ObjectParameter("Ordinal", ordinal) :
                new ObjectParameter("Ordinal", typeof(int));
    
            var employersNameParameter = employersName != null ?
                new ObjectParameter("EmployersName", employersName) :
                new ObjectParameter("EmployersName", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var jobRoleIdParameter = jobRoleId.HasValue ?
                new ObjectParameter("JobRoleId", jobRoleId) :
                new ObjectParameter("JobRoleId", typeof(int));
    
            var employedFromParameter = employedFrom != null ?
                new ObjectParameter("EmployedFrom", employedFrom) :
                new ObjectParameter("EmployedFrom", typeof(string));
    
            var employedToParameter = employedTo != null ?
                new ObjectParameter("EmployedTo", employedTo) :
                new ObjectParameter("EmployedTo", typeof(string));
    
            var currentSalaryParameter = currentSalary.HasValue ?
                new ObjectParameter("CurrentSalary", currentSalary) :
                new ObjectParameter("CurrentSalary", typeof(double));
    
            var reasonForLeavingParameter = reasonForLeaving != null ?
                new ObjectParameter("ReasonForLeaving", reasonForLeaving) :
                new ObjectParameter("ReasonForLeaving", typeof(string));
    
            var employerKnowLeavingParameter = employerKnowLeaving.HasValue ?
                new ObjectParameter("EmployerKnowLeaving", employerKnowLeaving) :
                new ObjectParameter("EmployerKnowLeaving", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidateEmployerSet", entityIdParameter, recordIdParameter, ordinalParameter, employersNameParameter, jobTitleParameter, jobRoleIdParameter, employedFromParameter, employedToParameter, currentSalaryParameter, reasonForLeavingParameter, employerKnowLeavingParameter);
        }
    
        public virtual int CandidateProfilesAdminList(Nullable<int> candidateId, Nullable<int> registrationId, Nullable<int> brandId, Nullable<int> currentUserId)
        {
            var candidateIdParameter = candidateId.HasValue ?
                new ObjectParameter("CandidateId", candidateId) :
                new ObjectParameter("CandidateId", typeof(int));
    
            var registrationIdParameter = registrationId.HasValue ?
                new ObjectParameter("RegistrationId", registrationId) :
                new ObjectParameter("RegistrationId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidateProfilesAdminList", candidateIdParameter, registrationIdParameter, brandIdParameter, currentUserIdParameter);
        }
    
        public virtual int CandidateRelationshipCountGet(Nullable<int> candidateId, Nullable<int> registrationId)
        {
            var candidateIdParameter = candidateId.HasValue ?
                new ObjectParameter("CandidateId", candidateId) :
                new ObjectParameter("CandidateId", typeof(int));
    
            var registrationIdParameter = registrationId.HasValue ?
                new ObjectParameter("RegistrationId", registrationId) :
                new ObjectParameter("RegistrationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidateRelationshipCountGet", candidateIdParameter, registrationIdParameter);
        }
    
        public virtual int CompanyAdminList(Nullable<int> currentUserId, Nullable<int> userType, string clientName, string contactEmail, string contactName, Nullable<int> homeBrand, Nullable<int> salesRep, Nullable<int> status, string cRNNo, string dateFilter, string dateFrom, string dateTo)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var homeBrandParameter = homeBrand.HasValue ?
                new ObjectParameter("HomeBrand", homeBrand) :
                new ObjectParameter("HomeBrand", typeof(int));
    
            var salesRepParameter = salesRep.HasValue ?
                new ObjectParameter("SalesRep", salesRep) :
                new ObjectParameter("SalesRep", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var cRNNoParameter = cRNNo != null ?
                new ObjectParameter("CRNNo", cRNNo) :
                new ObjectParameter("CRNNo", typeof(string));
    
            var dateFilterParameter = dateFilter != null ?
                new ObjectParameter("DateFilter", dateFilter) :
                new ObjectParameter("DateFilter", typeof(string));
    
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompanyAdminList", currentUserIdParameter, userTypeParameter, clientNameParameter, contactEmailParameter, contactNameParameter, homeBrandParameter, salesRepParameter, statusParameter, cRNNoParameter, dateFilterParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<ContactsAdminList_Result> ContactsAdminList(Nullable<int> companyId, Nullable<int> currentUserId, Nullable<int> userType, string contactEmail, string contactName, Nullable<int> status)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContactsAdminList_Result>("ContactsAdminList", companyIdParameter, currentUserIdParameter, userTypeParameter, contactEmailParameter, contactNameParameter, statusParameter);
        }
    
        public virtual int ContainsNoiseWords(string searchString, ObjectParameter containsNoiseWords, ObjectParameter onlyNoiseWords)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContainsNoiseWords", searchStringParameter, containsNoiseWords, onlyNoiseWords);
        }
    
        public virtual int CreditSystemCreateSubscription(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreditSystemCreateSubscription", xmlParameter);
        }
    
        public virtual int CsvToTable(string csvVariable, string temporaryTable, string variableName, string variableType)
        {
            var csvVariableParameter = csvVariable != null ?
                new ObjectParameter("CsvVariable", csvVariable) :
                new ObjectParameter("CsvVariable", typeof(string));
    
            var temporaryTableParameter = temporaryTable != null ?
                new ObjectParameter("TemporaryTable", temporaryTable) :
                new ObjectParameter("TemporaryTable", typeof(string));
    
            var variableNameParameter = variableName != null ?
                new ObjectParameter("VariableName", variableName) :
                new ObjectParameter("VariableName", typeof(string));
    
            var variableTypeParameter = variableType != null ?
                new ObjectParameter("VariableType", variableType) :
                new ObjectParameter("VariableType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CsvToTable", csvVariableParameter, temporaryTableParameter, variableNameParameter, variableTypeParameter);
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int EmailDomainAdd(Nullable<int> companyId, string emailDomain)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var emailDomainParameter = emailDomain != null ?
                new ObjectParameter("EmailDomain", emailDomain) :
                new ObjectParameter("EmailDomain", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmailDomainAdd", companyIdParameter, emailDomainParameter);
        }
    
        public virtual int GenerateRandomString(Nullable<bool> useNumbers, Nullable<bool> useLowerCase, Nullable<bool> useUpperCase, string charactersToUse, Nullable<short> passwordLength, ObjectParameter password)
        {
            var useNumbersParameter = useNumbers.HasValue ?
                new ObjectParameter("useNumbers", useNumbers) :
                new ObjectParameter("useNumbers", typeof(bool));
    
            var useLowerCaseParameter = useLowerCase.HasValue ?
                new ObjectParameter("useLowerCase", useLowerCase) :
                new ObjectParameter("useLowerCase", typeof(bool));
    
            var useUpperCaseParameter = useUpperCase.HasValue ?
                new ObjectParameter("useUpperCase", useUpperCase) :
                new ObjectParameter("useUpperCase", typeof(bool));
    
            var charactersToUseParameter = charactersToUse != null ?
                new ObjectParameter("charactersToUse", charactersToUse) :
                new ObjectParameter("charactersToUse", typeof(string));
    
            var passwordLengthParameter = passwordLength.HasValue ?
                new ObjectParameter("passwordLength", passwordLength) :
                new ObjectParameter("passwordLength", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateRandomString", useNumbersParameter, useLowerCaseParameter, useUpperCaseParameter, charactersToUseParameter, passwordLengthParameter, password);
        }
    
        public virtual int HierarchyRecurseChildren(string tempTableName, string tempTableIdField, string recursionTableName, string idField, string parentIdField, string deletedField)
        {
            var tempTableNameParameter = tempTableName != null ?
                new ObjectParameter("TempTableName", tempTableName) :
                new ObjectParameter("TempTableName", typeof(string));
    
            var tempTableIdFieldParameter = tempTableIdField != null ?
                new ObjectParameter("TempTableIdField", tempTableIdField) :
                new ObjectParameter("TempTableIdField", typeof(string));
    
            var recursionTableNameParameter = recursionTableName != null ?
                new ObjectParameter("RecursionTableName", recursionTableName) :
                new ObjectParameter("RecursionTableName", typeof(string));
    
            var idFieldParameter = idField != null ?
                new ObjectParameter("IdField", idField) :
                new ObjectParameter("IdField", typeof(string));
    
            var parentIdFieldParameter = parentIdField != null ?
                new ObjectParameter("ParentIdField", parentIdField) :
                new ObjectParameter("ParentIdField", typeof(string));
    
            var deletedFieldParameter = deletedField != null ?
                new ObjectParameter("DeletedField", deletedField) :
                new ObjectParameter("DeletedField", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HierarchyRecurseChildren", tempTableNameParameter, tempTableIdFieldParameter, recursionTableNameParameter, idFieldParameter, parentIdFieldParameter, deletedFieldParameter);
        }
    
        public virtual int LinkListUpdate(string table, string keyField, Nullable<int> keyValue, string linkField, string valueString, string typeField, Nullable<int> typeFieldValue, string deleteField)
        {
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var keyFieldParameter = keyField != null ?
                new ObjectParameter("KeyField", keyField) :
                new ObjectParameter("KeyField", typeof(string));
    
            var keyValueParameter = keyValue.HasValue ?
                new ObjectParameter("KeyValue", keyValue) :
                new ObjectParameter("KeyValue", typeof(int));
    
            var linkFieldParameter = linkField != null ?
                new ObjectParameter("LinkField", linkField) :
                new ObjectParameter("LinkField", typeof(string));
    
            var valueStringParameter = valueString != null ?
                new ObjectParameter("ValueString", valueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var typeFieldParameter = typeField != null ?
                new ObjectParameter("TypeField", typeField) :
                new ObjectParameter("TypeField", typeof(string));
    
            var typeFieldValueParameter = typeFieldValue.HasValue ?
                new ObjectParameter("TypeFieldValue", typeFieldValue) :
                new ObjectParameter("TypeFieldValue", typeof(int));
    
            var deleteFieldParameter = deleteField != null ?
                new ObjectParameter("DeleteField", deleteField) :
                new ObjectParameter("DeleteField", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkListUpdate", tableParameter, keyFieldParameter, keyValueParameter, linkFieldParameter, valueStringParameter, typeFieldParameter, typeFieldValueParameter, deleteFieldParameter);
        }
    
        public virtual int ListBrandOptionsGet(Nullable<int> currentBrandId, string brandIds, string masterListIds)
        {
            var currentBrandIdParameter = currentBrandId.HasValue ?
                new ObjectParameter("CurrentBrandId", currentBrandId) :
                new ObjectParameter("CurrentBrandId", typeof(int));
    
            var brandIdsParameter = brandIds != null ?
                new ObjectParameter("BrandIds", brandIds) :
                new ObjectParameter("BrandIds", typeof(string));
    
            var masterListIdsParameter = masterListIds != null ?
                new ObjectParameter("MasterListIds", masterListIds) :
                new ObjectParameter("MasterListIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListBrandOptionsGet", currentBrandIdParameter, brandIdsParameter, masterListIdsParameter);
        }
    
        public virtual int ListBrandOptionsGetExcludingMaster(Nullable<int> currentBrandId, string brandIds, string masterListIds)
        {
            var currentBrandIdParameter = currentBrandId.HasValue ?
                new ObjectParameter("CurrentBrandId", currentBrandId) :
                new ObjectParameter("CurrentBrandId", typeof(int));
    
            var brandIdsParameter = brandIds != null ?
                new ObjectParameter("BrandIds", brandIds) :
                new ObjectParameter("BrandIds", typeof(string));
    
            var masterListIdsParameter = masterListIds != null ?
                new ObjectParameter("MasterListIds", masterListIds) :
                new ObjectParameter("MasterListIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListBrandOptionsGetExcludingMaster", currentBrandIdParameter, brandIdsParameter, masterListIdsParameter);
        }
    
        public virtual int ListGet(Nullable<byte> listSource, Nullable<int> brandId, Nullable<int> listTypeId, Nullable<int> groupingId)
        {
            var listSourceParameter = listSource.HasValue ?
                new ObjectParameter("ListSource", listSource) :
                new ObjectParameter("ListSource", typeof(byte));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var listTypeIdParameter = listTypeId.HasValue ?
                new ObjectParameter("ListTypeId", listTypeId) :
                new ObjectParameter("ListTypeId", typeof(int));
    
            var groupingIdParameter = groupingId.HasValue ?
                new ObjectParameter("GroupingId", groupingId) :
                new ObjectParameter("GroupingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListGet", listSourceParameter, brandIdParameter, listTypeIdParameter, groupingIdParameter);
        }
    
        public virtual int ListGetAdmin(Nullable<byte> listSource, Nullable<int> brandId, Nullable<int> listTypeId)
        {
            var listSourceParameter = listSource.HasValue ?
                new ObjectParameter("ListSource", listSource) :
                new ObjectParameter("ListSource", typeof(byte));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var listTypeIdParameter = listTypeId.HasValue ?
                new ObjectParameter("ListTypeId", listTypeId) :
                new ObjectParameter("ListTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListGetAdmin", listSourceParameter, brandIdParameter, listTypeIdParameter);
        }
    
        public virtual int ListMasterExpandIDGet(Nullable<int> brandId, Nullable<int> listTypeId, Nullable<int> groupingId)
        {
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var listTypeIdParameter = listTypeId.HasValue ?
                new ObjectParameter("ListTypeId", listTypeId) :
                new ObjectParameter("ListTypeId", typeof(int));
    
            var groupingIdParameter = groupingId.HasValue ?
                new ObjectParameter("GroupingId", groupingId) :
                new ObjectParameter("GroupingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListMasterExpandIDGet", brandIdParameter, listTypeIdParameter, groupingIdParameter);
        }
    
        public virtual int ListMasterIDGet(Nullable<int> brandId, Nullable<int> listTypeId, Nullable<int> groupingId)
        {
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var listTypeIdParameter = listTypeId.HasValue ?
                new ObjectParameter("ListTypeId", listTypeId) :
                new ObjectParameter("ListTypeId", typeof(int));
    
            var groupingIdParameter = groupingId.HasValue ?
                new ObjectParameter("GroupingId", groupingId) :
                new ObjectParameter("GroupingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListMasterIDGet", brandIdParameter, listTypeIdParameter, groupingIdParameter);
        }
    
        public virtual int ListPopulateFromMaster(Nullable<int> brandId, Nullable<int> listId, Nullable<int> userId)
        {
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var listIdParameter = listId.HasValue ?
                new ObjectParameter("ListId", listId) :
                new ObjectParameter("ListId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListPopulateFromMaster", brandIdParameter, listIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoginAdminUser(string username, string defaultEmail, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var defaultEmailParameter = defaultEmail != null ?
                new ObjectParameter("DefaultEmail", defaultEmail) :
                new ObjectParameter("DefaultEmail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoginAdminUser", usernameParameter, defaultEmailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoginCandidate(string emailAddress, string password)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoginCandidate", emailAddressParameter, passwordParameter);
        }
    
        public virtual int OwnershipTransfer(Nullable<int> currentUserId, Nullable<int> newUserId)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var newUserIdParameter = newUserId.HasValue ?
                new ObjectParameter("NewUserId", newUserId) :
                new ObjectParameter("NewUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OwnershipTransfer", currentUserIdParameter, newUserIdParameter);
        }
    
        public virtual int PackagePriceSet(Nullable<int> priceType, Nullable<int> packageTypeId, Nullable<int> recordId, Nullable<decimal> price)
        {
            var priceTypeParameter = priceType.HasValue ?
                new ObjectParameter("PriceType", priceType) :
                new ObjectParameter("PriceType", typeof(int));
    
            var packageTypeIdParameter = packageTypeId.HasValue ?
                new ObjectParameter("PackageTypeId", packageTypeId) :
                new ObjectParameter("PackageTypeId", typeof(int));
    
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("RecordId", recordId) :
                new ObjectParameter("RecordId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PackagePriceSet", priceTypeParameter, packageTypeIdParameter, recordIdParameter, priceParameter);
        }
    
        public virtual int ppaChargesCalculate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ppaChargesCalculate");
        }
    
        public virtual ObjectResult<proc_CandidateSearch_Result> proc_CandidateSearch(string p_firstname, string p_surname, Nullable<int> p_age, string p_Gender, Nullable<int> p_qaulification, Nullable<decimal> p_salaryfrom, Nullable<decimal> p_salaryto, Nullable<int> p_experienceFrom, Nullable<int> p_experienceTo, string p_keyword, Nullable<int> p_searchType, Nullable<int> p_pageSize, Nullable<int> p_pageIndex)
        {
            var p_firstnameParameter = p_firstname != null ?
                new ObjectParameter("p_firstname", p_firstname) :
                new ObjectParameter("p_firstname", typeof(string));
    
            var p_surnameParameter = p_surname != null ?
                new ObjectParameter("p_surname", p_surname) :
                new ObjectParameter("p_surname", typeof(string));
    
            var p_ageParameter = p_age.HasValue ?
                new ObjectParameter("p_age", p_age) :
                new ObjectParameter("p_age", typeof(int));
    
            var p_GenderParameter = p_Gender != null ?
                new ObjectParameter("p_Gender", p_Gender) :
                new ObjectParameter("p_Gender", typeof(string));
    
            var p_qaulificationParameter = p_qaulification.HasValue ?
                new ObjectParameter("p_qaulification", p_qaulification) :
                new ObjectParameter("p_qaulification", typeof(int));
    
            var p_salaryfromParameter = p_salaryfrom.HasValue ?
                new ObjectParameter("p_salaryfrom", p_salaryfrom) :
                new ObjectParameter("p_salaryfrom", typeof(decimal));
    
            var p_salarytoParameter = p_salaryto.HasValue ?
                new ObjectParameter("p_salaryto", p_salaryto) :
                new ObjectParameter("p_salaryto", typeof(decimal));
    
            var p_experienceFromParameter = p_experienceFrom.HasValue ?
                new ObjectParameter("p_experienceFrom", p_experienceFrom) :
                new ObjectParameter("p_experienceFrom", typeof(int));
    
            var p_experienceToParameter = p_experienceTo.HasValue ?
                new ObjectParameter("p_experienceTo", p_experienceTo) :
                new ObjectParameter("p_experienceTo", typeof(int));
    
            var p_keywordParameter = p_keyword != null ?
                new ObjectParameter("p_keyword", p_keyword) :
                new ObjectParameter("p_keyword", typeof(string));
    
            var p_searchTypeParameter = p_searchType.HasValue ?
                new ObjectParameter("p_searchType", p_searchType) :
                new ObjectParameter("p_searchType", typeof(int));
    
            var p_pageSizeParameter = p_pageSize.HasValue ?
                new ObjectParameter("p_pageSize", p_pageSize) :
                new ObjectParameter("p_pageSize", typeof(int));
    
            var p_pageIndexParameter = p_pageIndex.HasValue ?
                new ObjectParameter("p_pageIndex", p_pageIndex) :
                new ObjectParameter("p_pageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_CandidateSearch_Result>("proc_CandidateSearch", p_firstnameParameter, p_surnameParameter, p_ageParameter, p_GenderParameter, p_qaulificationParameter, p_salaryfromParameter, p_salarytoParameter, p_experienceFromParameter, p_experienceToParameter, p_keywordParameter, p_searchTypeParameter, p_pageSizeParameter, p_pageIndexParameter);
        }
    
        public virtual ObjectResult<proc_CandidateSearchInterest_Result> proc_CandidateSearchInterest(Nullable<int> ca_id)
        {
            var ca_idParameter = ca_id.HasValue ?
                new ObjectParameter("ca_id", ca_id) :
                new ObjectParameter("ca_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_CandidateSearchInterest_Result>("proc_CandidateSearchInterest", ca_idParameter);
        }
    
        public virtual ObjectResult<proc_JobSearch_Result> proc_JobSearch(Nullable<int> p_qaulification, Nullable<decimal> p_salaryfrom, Nullable<decimal> p_salaryto, Nullable<int> p_experienceFrom, Nullable<int> p_experienceTo, string p_keyword, Nullable<int> p_searchType, Nullable<int> p_pageSize, Nullable<int> p_pageIndex)
        {
            var p_qaulificationParameter = p_qaulification.HasValue ?
                new ObjectParameter("p_qaulification", p_qaulification) :
                new ObjectParameter("p_qaulification", typeof(int));
    
            var p_salaryfromParameter = p_salaryfrom.HasValue ?
                new ObjectParameter("p_salaryfrom", p_salaryfrom) :
                new ObjectParameter("p_salaryfrom", typeof(decimal));
    
            var p_salarytoParameter = p_salaryto.HasValue ?
                new ObjectParameter("p_salaryto", p_salaryto) :
                new ObjectParameter("p_salaryto", typeof(decimal));
    
            var p_experienceFromParameter = p_experienceFrom.HasValue ?
                new ObjectParameter("p_experienceFrom", p_experienceFrom) :
                new ObjectParameter("p_experienceFrom", typeof(int));
    
            var p_experienceToParameter = p_experienceTo.HasValue ?
                new ObjectParameter("p_experienceTo", p_experienceTo) :
                new ObjectParameter("p_experienceTo", typeof(int));
    
            var p_keywordParameter = p_keyword != null ?
                new ObjectParameter("p_keyword", p_keyword) :
                new ObjectParameter("p_keyword", typeof(string));
    
            var p_searchTypeParameter = p_searchType.HasValue ?
                new ObjectParameter("p_searchType", p_searchType) :
                new ObjectParameter("p_searchType", typeof(int));
    
            var p_pageSizeParameter = p_pageSize.HasValue ?
                new ObjectParameter("p_pageSize", p_pageSize) :
                new ObjectParameter("p_pageSize", typeof(int));
    
            var p_pageIndexParameter = p_pageIndex.HasValue ?
                new ObjectParameter("p_pageIndex", p_pageIndex) :
                new ObjectParameter("p_pageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_JobSearch_Result>("proc_JobSearch", p_qaulificationParameter, p_salaryfromParameter, p_salarytoParameter, p_experienceFromParameter, p_experienceToParameter, p_keywordParameter, p_searchTypeParameter, p_pageSizeParameter, p_pageIndexParameter);
        }
    
        public virtual int ProcessOrder(Nullable<int> orderId, Nullable<int> vacancyId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var vacancyIdParameter = vacancyId.HasValue ?
                new ObjectParameter("VacancyId", vacancyId) :
                new ObjectParameter("VacancyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcessOrder", orderIdParameter, vacancyIdParameter);
        }
    
        public virtual int RandomNumberGenerate(Nullable<int> minValue, Nullable<int> maxValue, ObjectParameter result)
        {
            var minValueParameter = minValue.HasValue ?
                new ObjectParameter("MinValue", minValue) :
                new ObjectParameter("MinValue", typeof(int));
    
            var maxValueParameter = maxValue.HasValue ?
                new ObjectParameter("MaxValue", maxValue) :
                new ObjectParameter("MaxValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RandomNumberGenerate", minValueParameter, maxValueParameter, result);
        }
    
        public virtual int RecruiterDirectoryList(Nullable<int> mode, string startLetter, Nullable<int> filter)
        {
            var modeParameter = mode.HasValue ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(int));
    
            var startLetterParameter = startLetter != null ?
                new ObjectParameter("StartLetter", startLetter) :
                new ObjectParameter("StartLetter", typeof(string));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecruiterDirectoryList", modeParameter, startLetterParameter, filterParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RecruiterStatsGetByStatCompanyID(Nullable<int> companyID, Nullable<int> statsID, Nullable<System.DateTime> periodEnding, Nullable<int> hours)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var statsIDParameter = statsID.HasValue ?
                new ObjectParameter("StatsID", statsID) :
                new ObjectParameter("StatsID", typeof(int));
    
            var periodEndingParameter = periodEnding.HasValue ?
                new ObjectParameter("PeriodEnding", periodEnding) :
                new ObjectParameter("PeriodEnding", typeof(System.DateTime));
    
            var hoursParameter = hours.HasValue ?
                new ObjectParameter("Hours", hours) :
                new ObjectParameter("Hours", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RecruiterStatsGetByStatCompanyID", companyIDParameter, statsIDParameter, periodEndingParameter, hoursParameter);
        }
    
        public virtual int ReplaceText(string table, string field, string pk, string old, string @new, string where)
        {
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            var fieldParameter = field != null ?
                new ObjectParameter("field", field) :
                new ObjectParameter("field", typeof(string));
    
            var pkParameter = pk != null ?
                new ObjectParameter("pk", pk) :
                new ObjectParameter("pk", typeof(string));
    
            var oldParameter = old != null ?
                new ObjectParameter("old", old) :
                new ObjectParameter("old", typeof(string));
    
            var newParameter = @new != null ?
                new ObjectParameter("new", @new) :
                new ObjectParameter("new", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReplaceText", tableParameter, fieldParameter, pkParameter, oldParameter, newParameter, whereParameter);
        }
    
        public virtual int Report1(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report1", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report11(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report11", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual ObjectResult<Report12_Result> Report12(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report12_Result>("Report12", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report13(Nullable<int> currentUserId, Nullable<int> userType, string datefrom, string dateto, Nullable<int> brandId)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report13", currentUserIdParameter, userTypeParameter, datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report14(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report14", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual ObjectResult<Report15_Result> Report15(Nullable<int> currentUserId, Nullable<int> userType, Nullable<int> brandId)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report15_Result>("Report15", currentUserIdParameter, userTypeParameter, brandIdParameter);
        }
    
        public virtual ObjectResult<Report16_Result> Report16(Nullable<int> currentUserId, Nullable<int> userType, Nullable<int> brandId)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report16_Result>("Report16", currentUserIdParameter, userTypeParameter, brandIdParameter);
        }
    
        public virtual ObjectResult<Report17_Result> Report17(string datefrom, string dateto, Nullable<int> brandId, Nullable<int> companyid, Nullable<int> userid)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report17_Result>("Report17", datefromParameter, datetoParameter, brandIdParameter, companyidParameter, useridParameter);
        }
    
        public virtual ObjectResult<Report19_Result> Report19(string datefrom, string dateto, Nullable<bool> excludeexported)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var excludeexportedParameter = excludeexported.HasValue ?
                new ObjectParameter("excludeexported", excludeexported) :
                new ObjectParameter("excludeexported", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report19_Result>("Report19", datefromParameter, datetoParameter, excludeexportedParameter);
        }
    
        public virtual int Report2(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report2", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report3(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report3", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report4(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report4", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report5(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report5", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report7(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report7", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report8(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report8", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int Report9(string datefrom, string dateto, Nullable<int> brandId)
        {
            var datefromParameter = datefrom != null ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(string));
    
            var datetoParameter = dateto != null ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report9", datefromParameter, datetoParameter, brandIdParameter);
        }
    
        public virtual int ShowcaseList(Nullable<int> groupId, Nullable<bool> angelaMortimerGroupBrand, string startLetter)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var angelaMortimerGroupBrandParameter = angelaMortimerGroupBrand.HasValue ?
                new ObjectParameter("AngelaMortimerGroupBrand", angelaMortimerGroupBrand) :
                new ObjectParameter("AngelaMortimerGroupBrand", typeof(bool));
    
            var startLetterParameter = startLetter != null ?
                new ObjectParameter("StartLetter", startLetter) :
                new ObjectParameter("StartLetter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShowcaseList", groupIdParameter, angelaMortimerGroupBrandParameter, startLetterParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int StatisticsRecordCount(Nullable<int> typeId, Nullable<int> linkId)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var linkIdParameter = linkId.HasValue ?
                new ObjectParameter("LinkId", linkId) :
                new ObjectParameter("LinkId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatisticsRecordCount", typeIdParameter, linkIdParameter);
        }
    
        public virtual int StatisticsRecordData(Nullable<int> typeId, Nullable<int> linkId, string extraData)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var linkIdParameter = linkId.HasValue ?
                new ObjectParameter("LinkId", linkId) :
                new ObjectParameter("LinkId", typeof(int));
    
            var extraDataParameter = extraData != null ?
                new ObjectParameter("ExtraData", extraData) :
                new ObjectParameter("ExtraData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatisticsRecordData", typeIdParameter, linkIdParameter, extraDataParameter);
        }
    
        public virtual int SubscriberExport(string brandIds, Nullable<int> exportType)
        {
            var brandIdsParameter = brandIds != null ?
                new ObjectParameter("BrandIds", brandIds) :
                new ObjectParameter("BrandIds", typeof(string));
    
            var exportTypeParameter = exportType.HasValue ?
                new ObjectParameter("ExportType", exportType) :
                new ObjectParameter("ExportType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubscriberExport", brandIdsParameter, exportTypeParameter);
        }
    
        public virtual int VacancyAdminList(Nullable<int> currentUserId, Nullable<int> userType, Nullable<int> statusId, string jobTitleRef, string client, Nullable<int> companyId, Nullable<int> contactId, Nullable<int> brandId, Nullable<int> consultantId)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var jobTitleRefParameter = jobTitleRef != null ?
                new ObjectParameter("JobTitleRef", jobTitleRef) :
                new ObjectParameter("JobTitleRef", typeof(string));
    
            var clientParameter = client != null ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var consultantIdParameter = consultantId.HasValue ?
                new ObjectParameter("ConsultantId", consultantId) :
                new ObjectParameter("ConsultantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VacancyAdminList", currentUserIdParameter, userTypeParameter, statusIdParameter, jobTitleRefParameter, clientParameter, companyIdParameter, contactIdParameter, brandIdParameter, consultantIdParameter);
        }
    
        public virtual int WebVacancyCount(Nullable<int> currentBrandId, Nullable<byte> searchScope, string jobTypeIds, string locationIds, string sectorIds, Nullable<int> keywordSearchScopeId, string recruiterTypeIds, Nullable<decimal> salaryRateMin, Nullable<decimal> salaryRateMax, string keywords, string jobRef, Nullable<int> companyID, Nullable<System.DateTime> dateAdded, Nullable<System.DateTime> updatedSince)
        {
            var currentBrandIdParameter = currentBrandId.HasValue ?
                new ObjectParameter("CurrentBrandId", currentBrandId) :
                new ObjectParameter("CurrentBrandId", typeof(int));
    
            var searchScopeParameter = searchScope.HasValue ?
                new ObjectParameter("SearchScope", searchScope) :
                new ObjectParameter("SearchScope", typeof(byte));
    
            var jobTypeIdsParameter = jobTypeIds != null ?
                new ObjectParameter("JobTypeIds", jobTypeIds) :
                new ObjectParameter("JobTypeIds", typeof(string));
    
            var locationIdsParameter = locationIds != null ?
                new ObjectParameter("LocationIds", locationIds) :
                new ObjectParameter("LocationIds", typeof(string));
    
            var sectorIdsParameter = sectorIds != null ?
                new ObjectParameter("SectorIds", sectorIds) :
                new ObjectParameter("SectorIds", typeof(string));
    
            var keywordSearchScopeIdParameter = keywordSearchScopeId.HasValue ?
                new ObjectParameter("KeywordSearchScopeId", keywordSearchScopeId) :
                new ObjectParameter("KeywordSearchScopeId", typeof(int));
    
            var recruiterTypeIdsParameter = recruiterTypeIds != null ?
                new ObjectParameter("RecruiterTypeIds", recruiterTypeIds) :
                new ObjectParameter("RecruiterTypeIds", typeof(string));
    
            var salaryRateMinParameter = salaryRateMin.HasValue ?
                new ObjectParameter("SalaryRateMin", salaryRateMin) :
                new ObjectParameter("SalaryRateMin", typeof(decimal));
    
            var salaryRateMaxParameter = salaryRateMax.HasValue ?
                new ObjectParameter("SalaryRateMax", salaryRateMax) :
                new ObjectParameter("SalaryRateMax", typeof(decimal));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var jobRefParameter = jobRef != null ?
                new ObjectParameter("JobRef", jobRef) :
                new ObjectParameter("JobRef", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var dateAddedParameter = dateAdded.HasValue ?
                new ObjectParameter("DateAdded", dateAdded) :
                new ObjectParameter("DateAdded", typeof(System.DateTime));
    
            var updatedSinceParameter = updatedSince.HasValue ?
                new ObjectParameter("UpdatedSince", updatedSince) :
                new ObjectParameter("UpdatedSince", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebVacancyCount", currentBrandIdParameter, searchScopeParameter, jobTypeIdsParameter, locationIdsParameter, sectorIdsParameter, keywordSearchScopeIdParameter, recruiterTypeIdsParameter, salaryRateMinParameter, salaryRateMaxParameter, keywordsParameter, jobRefParameter, companyIDParameter, dateAddedParameter, updatedSinceParameter);
        }
    
        public virtual int WebVacancySearch(Nullable<int> currentBrandId, Nullable<byte> searchScope, string jobTypeIds, string locationIds, string sectorIds, Nullable<int> keywordSearchScopeId, string recruiterTypeIds, Nullable<decimal> salaryRateMin, Nullable<decimal> salaryRateMax, string keywords, string jobRef, Nullable<int> companyID, Nullable<System.DateTime> dateAdded, Nullable<int> order, Nullable<System.DateTime> updatedSince)
        {
            var currentBrandIdParameter = currentBrandId.HasValue ?
                new ObjectParameter("CurrentBrandId", currentBrandId) :
                new ObjectParameter("CurrentBrandId", typeof(int));
    
            var searchScopeParameter = searchScope.HasValue ?
                new ObjectParameter("SearchScope", searchScope) :
                new ObjectParameter("SearchScope", typeof(byte));
    
            var jobTypeIdsParameter = jobTypeIds != null ?
                new ObjectParameter("JobTypeIds", jobTypeIds) :
                new ObjectParameter("JobTypeIds", typeof(string));
    
            var locationIdsParameter = locationIds != null ?
                new ObjectParameter("LocationIds", locationIds) :
                new ObjectParameter("LocationIds", typeof(string));
    
            var sectorIdsParameter = sectorIds != null ?
                new ObjectParameter("SectorIds", sectorIds) :
                new ObjectParameter("SectorIds", typeof(string));
    
            var keywordSearchScopeIdParameter = keywordSearchScopeId.HasValue ?
                new ObjectParameter("KeywordSearchScopeId", keywordSearchScopeId) :
                new ObjectParameter("KeywordSearchScopeId", typeof(int));
    
            var recruiterTypeIdsParameter = recruiterTypeIds != null ?
                new ObjectParameter("RecruiterTypeIds", recruiterTypeIds) :
                new ObjectParameter("RecruiterTypeIds", typeof(string));
    
            var salaryRateMinParameter = salaryRateMin.HasValue ?
                new ObjectParameter("SalaryRateMin", salaryRateMin) :
                new ObjectParameter("SalaryRateMin", typeof(decimal));
    
            var salaryRateMaxParameter = salaryRateMax.HasValue ?
                new ObjectParameter("SalaryRateMax", salaryRateMax) :
                new ObjectParameter("SalaryRateMax", typeof(decimal));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var jobRefParameter = jobRef != null ?
                new ObjectParameter("JobRef", jobRef) :
                new ObjectParameter("JobRef", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var dateAddedParameter = dateAdded.HasValue ?
                new ObjectParameter("DateAdded", dateAdded) :
                new ObjectParameter("DateAdded", typeof(System.DateTime));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var updatedSinceParameter = updatedSince.HasValue ?
                new ObjectParameter("UpdatedSince", updatedSince) :
                new ObjectParameter("UpdatedSince", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebVacancySearch", currentBrandIdParameter, searchScopeParameter, jobTypeIdsParameter, locationIdsParameter, sectorIdsParameter, keywordSearchScopeIdParameter, recruiterTypeIdsParameter, salaryRateMinParameter, salaryRateMaxParameter, keywordsParameter, jobRefParameter, companyIDParameter, dateAddedParameter, orderParameter, updatedSinceParameter);
        }
    }
}
